import Head from 'next/head';

import Container from '../components/Container';
import styles from '../styles/Home.module.css';
import Wrapper from '../components/Wrapper';
import Submit from '../components/Submit';
import TodoContext from '../store/todo-context';
import useTask from '../hooks/useTask';

function Home() {
  const {
    tasks,
    addTaskHandler,
    editTaskHandler,
    deleteTaskHandler,
    handleDragEnd,
    currentInput,
    inputValueHandler,
    isValid,
    isLoading,
    submit,
    onIdxNumDisplayHandler,
    idxNumDisplayMode,
  } = useTask();

  return (
    <TodoContext.Provider
      value={{
        addTaskHandler,
        editTaskHandler,
        deleteTaskHandler,
        handleDragEnd,
        currentInput,
        inputValueHandler,
        isValid,
        isLoading,
        submit,
        onIdxNumDisplayHandler,
        idxNumDisplayMode,
      }}
    >
      <div className={styles.container}>
        <Head>
          <title>To-Do App</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
          <link
            rel='stylesheet'
            href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'
          />
        </Head>
        {isLoading && <p>Loading...</p>}
        {!isLoading && (
          <>
            {' '}
            <div className='idxNumSwitch'>
              <p>Index Number Display Mode</p>
              <label className='switch'>
                <input
                  type='checkbox'
                  onChange={() => onIdxNumDisplayHandler()}
                  checked={idxNumDisplayMode}
                />
                <span className='slider round'></span>
              </label>
            </div>
            <Container className='container'>
              <Submit />

              <div className='task-list'>
                {tasks && <Wrapper tasks={tasks}></Wrapper>}
              </div>
            </Container>
          </>
        )}
      </div>
    </TodoContext.Provider>
  );
}

export default Home;
